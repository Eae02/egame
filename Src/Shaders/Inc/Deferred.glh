#ifndef DEFERRED_GLH
#define DEFERRED_GLH

#include <EGame.glh>

vec2 SMEncode(vec3 n)
{
	if (n.z < -0.999)
		return vec2(0.5, 1.0);
	float p = sqrt(n.z * 8.0 + 8.0);
	return vec2(n.xy / p + 0.5);
}

vec3 SMDecode(vec2 s)
{
	vec2 fenc = s * 4.0 - 2.0;
	float f = dot(fenc, fenc);
	float g = sqrt(max(1.0 - f / 4.0, 0.0));
	return normalize(vec3(fenc * g, 1.0 - f / 2.0));
}

vec3 WorldPosFromDepth(float depthH, vec2 screenCoord, mat4 inverseViewProj)
{
	vec4 h = vec4(screenCoord * 2.0 - vec2(1.0), EG_OPENGL ? (depthH * 2.0 - 1.0) : depthH, 1.0);
	if (!EG_OPENGL)
		h.y = -h.y;
	vec4 d = inverseViewProj * h;
	return d.xyz / d.w;
}

#endif
