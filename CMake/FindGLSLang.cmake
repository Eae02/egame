# FindGLSLang.cmake
# Finds the glslang library

find_library(GLSLANG_LIBRARY NAMES libglslang.a glslang ${LIBRARY_SEARCH_PATH})
find_library(OGLCOMPILER_LIBRARY NAMES OGLCompiler ${LIBRARY_SEARCH_PATH})
find_library(OSDEPENDENT_LIBRARY NAMES OSDependent ${LIBRARY_SEARCH_PATH})
find_library(SPIRV_LIBRARY NAMES libSPIRV.a SPIRV ${LIBRARY_SEARCH_PATH})
find_library(HLSL_LIBRARY NAMES libHLSL.a HLSL ${LIBRARY_SEARCH_PATH})

find_path(GLSLANG_INCLUDE_DIR glslang/Public/ShaderLang.h PATHS ${HEADER_SEARCH_PATH} /usr/include/glslang)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(GLSLANG
	REQUIRED_VARS GLSLANG_INCLUDE_DIR GLSLANG_LIBRARY OGLCOMPILER_LIBRARY OSDEPENDENT_LIBRARY SPIRV_LIBRARY
)

mark_as_advanced(GLSLANG_FOUND GLSLANG_INCLUDE_DIR GLSLANG_LIBRARY OGLCOMPILER_LIBRARY OSDEPENDENT_LIBRARY SPIRV_LIBRARY)

if (GLSLANG_FOUND)
	add_library(GLSLang::OGLCompiler STATIC IMPORTED)
	set_target_properties(GLSLang::OGLCompiler PROPERTIES IMPORTED_LOCATION "${OGLCOMPILER_LIBRARY}")
	
	add_library(GLSLang::OSDependent STATIC IMPORTED)
	set_target_properties(GLSLang::OSDependent PROPERTIES IMPORTED_LOCATION "${OSDEPENDENT_LIBRARY}")
	
	add_library(GLSLang::SpirV STATIC IMPORTED)
	set_target_properties(GLSLang::SpirV PROPERTIES IMPORTED_LOCATION "${SPIRV_LIBRARY}")
	
	add_library(GLSLang::HLSL STATIC IMPORTED)
	set_target_properties(GLSLang::HLSL PROPERTIES IMPORTED_LOCATION "${HLSL_LIBRARY}")
	
	add_library(GLSLang::GLSLang STATIC IMPORTED)
	set_target_properties(GLSLang::GLSLang PROPERTIES
		INTERFACE_INCLUDE_DIRECTORIES "${GLSLANG_INCLUDE_DIR}"
		IMPORTED_LOCATION "${GLSLANG_LIBRARY}"
		INTERFACE_LINK_LIBRARIES "GLSLang::OGLCompiler;GLSLang::OSDependent;GLSLang::SpirV;GLSLang::HLSL"
	)
endif()
