# FindGLSLang.cmake
# Finds the glslang library

if (GLSLANG_DIR)
	set(GLSLANG_LIB_SEARCH_PATH ${GLSLANG_DIR}/lib)
else()
	set(GLSLANG_LIB_SEARCH_PATH ${LIBRARY_SEARCH_PATH})
endif()

find_library(GLSLANG_LIBRARY NAMES glslang PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(GLSLANG_LIBRARY_DEBUG NAMES glslangd glslang PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(OGLCOMPILER_LIBRARY NAMES OGLCompiler PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(OGLCOMPILER_LIBRARY_DEBUG NAMES OGLCompilerd OGLCompiler PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(OSDEPENDENT_LIBRARY NAMES OSDependent PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(OSDEPENDENT_LIBRARY_DEBUG NAMES OSDependentd OSDependent PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_LIBRARY NAMES SPIRV PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_LIBRARY_DEBUG NAMES SPIRVd SPIRV PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_TOOLS_LIBRARY NAMES SPIRV-Tools PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_TOOLS_LIBRARY_DEBUG NAMES SPIRV-Toolsd SPIRV-Tools PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_OPT_LIBRARY NAMES SPIRV-Tools-opt PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_OPT_LIBRARY_DEBUG NAMES SPIRV-Tools-optd SPIRV-Tools-opt PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_REMAPPER_LIBRARY NAMES SPVRemapper PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(SPIRV_REMAPPER_LIBRARY_DEBUG NAMES SPVRemapperd SPVRemapper PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(HLSL_LIBRARY NAMES HLSL PATHS ${GLSLANG_LIB_SEARCH_PATH})
find_library(HLSL_LIBRARY_DEBUG NAMES HLSLd HLSL PATHS ${GLSLANG_LIB_SEARCH_PATH})

find_path(GLSLANG_INCLUDE_DIR glslang/Public/ShaderLang.h PATHS ${GLSLANG_DIR}/include ${HEADER_SEARCH_PATH} /usr/include/glslang)

find_path(SPIRV_TOOLS_INCLUDE_DIR spirv-tools/libspirv.h PATHS ${HEADER_SEARCH_PATH})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(GLSLang
	REQUIRED_VARS GLSLANG_INCLUDE_DIR GLSLANG_LIBRARY OGLCOMPILER_LIBRARY OSDEPENDENT_LIBRARY SPIRV_LIBRARY SPIRV_OPT_LIBRARY
)

mark_as_advanced(GLSLang_FOUND GLSLANG_INCLUDE_DIR GLSLANG_LIBRARY OGLCOMPILER_LIBRARY OSDEPENDENT_LIBRARY SPIRV_LIBRARY)

if (GLSLang_FOUND)
	add_library(GLSLang::OGLCompiler STATIC IMPORTED)
	set_target_properties(GLSLang::OGLCompiler PROPERTIES
		IMPORTED_LOCATION "${OGLCOMPILER_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${OGLCOMPILER_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::OSDependent STATIC IMPORTED)
	set_target_properties(GLSLang::OSDependent PROPERTIES
		IMPORTED_LOCATION "${OSDEPENDENT_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${OSDEPENDENT_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::SpirV STATIC IMPORTED)
	set_target_properties(GLSLang::SpirV PROPERTIES
		IMPORTED_LOCATION "${SPIRV_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${SPIRV_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::SpirVRemapper STATIC IMPORTED)
	set_target_properties(GLSLang::SpirVRemapper PROPERTIES
		IMPORTED_LOCATION "${SPIRV_REMAPPER_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${SPIRV_REMAPPER_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::SpirVToolsOpt STATIC IMPORTED)
	set_target_properties(GLSLang::SpirVToolsOpt PROPERTIES
		IMPORTED_LOCATION "${SPIRV_OPT_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${SPIRV_OPT_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::SpirVTools STATIC IMPORTED)
	set_target_properties(GLSLang::SpirVTools PROPERTIES
		INTERFACE_INCLUDE_DIRECTORIES "${SPIRV_TOOLS_INCLUDE_DIR}"
		IMPORTED_LOCATION "${SPIRV_TOOLS_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${SPIRV_TOOLS_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::HLSL STATIC IMPORTED)
	set_target_properties(GLSLang::HLSL PROPERTIES
		IMPORTED_LOCATION "${HLSL_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${HLSL_LIBRARY_DEBUG}"
	)
	
	add_library(GLSLang::GLSLang STATIC IMPORTED)
	set_target_properties(GLSLang::GLSLang PROPERTIES
		INTERFACE_INCLUDE_DIRECTORIES "${GLSLANG_INCLUDE_DIR}"
		IMPORTED_LOCATION "${GLSLANG_LIBRARY}"
		IMPORTED_LOCATION_DEBUG "${GLSLANG_LIBRARY_DEBUG}"
		INTERFACE_LINK_LIBRARIES "GLSLang::OGLCompiler;GLSLang::OSDependent;GLSLang::SpirVTools;GLSLang::SpirVRemapper;GLSLang::SpirV;GLSLang::SpirVToolsOpt;GLSLang::HLSL"
	)
endif()
